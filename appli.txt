# logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.com.example=DEBUG


# oracle ??
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xe
spring.datasource.username=testplanner
spring.datasource.password=testplanner
spring.datasource.hikari.maximum-pool-size=5

# JPA ????
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.properties.hibernate.format_sql=false
# Entity ???
spring.jpa.properties.hibernate.hbm2ddl.auto=update

spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false

# session ????
server.servlet.session.timeout=1000m
spring.thymeleaf.prefix=classpath:/templates/

# Google SMTP ?? ??
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=lnewgatel@gmail.com
spring.mail.password=iwss iwou trbi nqpf

# SMTP ?? ? ?? ??
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

server.port = 8085


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 485821722144-1agoupedk303o3g15r3m86daeabhutqf.apps.googleusercontent.com
            client-secret: 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
            scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              - profile
              - email

          naver:
            client-id: fDEnmXOzIvfEgS7WoPYf
            client-secret: C8DL8A57dB
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            #            "http://localhost:8080/login/oauth2/code/naver"
            scope:
              - name
              - email
              - profile_image
            client-name: Naver

          kakao:
            client-id: b2b324ea3d41ed3a8ca83c80e3ccc809
            client-secret: t5JNlO3QMiLSluiExrjGLinc1eANF5N5
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
            # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
            # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정